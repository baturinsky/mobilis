"use strict";(()=>{function O(e,r){let t;switch(r){case 0:return t=[[0,-1],[1,0],[0,1],[-1,0]].map(([n,a])=>a*e+n),[t,t];case 4:return t=[[0,-1],[1,-1],[1,0],[1,1],[0,1],[-1,1],[-1,0],[-1,-1]].map(([n,a])=>a*e+n),[t,t];case 1:return[[[0,-1],[1,0],[0,1],[-1,1],[-1,0],[-1,-1]],[[1,-1],[1,0],[1,1],[0,1],[-1,0],[0,-1]]].map(n=>n.map(([a,o])=>o*e+a));case 2:return t=[[1,-1],[2,0],[1,1],[-1,1],[-2,0],[-1,-1]].map(([n,a])=>a*e+n),[t,t];case 3:return t=[[0,-1],[1,0],[1,1],[0,1],[-1,0],[-1,-1]].map(([n,a])=>a*e+n),[t,t]}}function Ee(e,r,t){return e*(1-t)+r*t}function j(e,r,t){return r?[0,1,2,3].map(n=>Ee(e[n],r[n],t)):[0,0,0,0]}var H=6;function x(){let e=Math.sin(H)*1e4;return H=(H+Math.E)%1e8,e-Math.floor(e)}function Te([e,r],t){return Math.floor(e)+Math.floor(r*t)}function W(e){return e.getContext("2d")}function N(e,r){let t=document.createElement("canvas");t.width=e,t.height=r;let n=W(t);return{canvas:t,ctx:n}}function K(e){let n=W(e).getImageData(0,0,e.width,e.height).data,a=new Float32Array(n.length/4);for(let o=0;o<n.length;o++)a[o]=n[o*4+3]/255;return a}function Ie(e,r,t=5e3,n=100,a=.01,o=!0){let{canvas:s,ctx:m}=N(e,r);if(o){let l=m.createRadialGradient(0,0,0,0,0,1);l.addColorStop(0,`rgba(255, 255, 255, ${a})`),l.addColorStop(1,"rgba(255, 255, 255, 0)"),m.fillStyle=l}else m.fillStyle=`rgba(255, 255, 255, ${a})`;for(let l=0;l<t;l++){let i=[...Array(3)].map(()=>x()),[u,c]=[i[0]*e,i[1]*r],h=Math.pow(i[2],2)*n;m.save(),m.translate(u,c),m.rotate(x()*Math.PI),m.scale(h*(.5+x()),h*(.5+x())),m.beginPath(),m.arc(0,0,1,0,Math.PI*2),m.fill(),m.restore()}return s}function se(e,r){let{canvas:t,ctx:n}=N(e.width,e.height);return n.filter=r,n.drawImage(e,0,0),t}function Y(e,r=.5,t=1e3){if(!e)debugger;let n=e.length,a=[...Array(t)].map(()=>e[Math.floor(x()*n)]);return a=a.sort(),a[Math.floor(r*a.length)]}function Re(e,r=1e3){let t=e.length,n=[...Array(r)].map(()=>e[Math.floor(x()*t)]),a=0;for(let o of n)o>a&&(a=o);return e.map(o=>o/a)}var k=({width:e,height:r},t,n,a,o)=>K(se(Ie(e,r,n,Math.sqrt(e*e+r*r)*a,o),`blur(${t}px)`));function Le(e){let{width:r,height:t,seed:n,noiseSmoothness:a,tectonicSmoothness:o,noiseFactor:s,crustFactor:m,tectonicFactor:l,pangaea:i}=e;H=n;let u=r*t;console.time("noise");let c=k(e,a,3e3,.15,.03),h=k(e,o,2e3,.15,.03),v=k(e,o,2e3,.15,.03);console.timeEnd("noise"),console.time("main");let b=Y(h,.5),w=h.map((E,y)=>(.2/(Math.abs(b-E)+.1)-.95)*(v[y]-.2)*2),A=h.map((E,y)=>5+c[y]*s+h[y]*m+w[y]*l+-i*(Math.abs(y/u-.5)+Math.abs(y%r/r-.5)));console.timeEnd("main"),console.time("normalize");let C=Re(A);return console.timeEnd("normalize"),{dryElevation:C,tectonic:w}}function Z(e,r){return r??=Le(e),Ce(e,r)}function Ce(e,r){let{width:t,height:n,averageTemperature:a,biomeScrambling:o,erosion:s,riversShown:m,randomiseHumidity:l,generatePhoto:i,shading:u,noiseSmoothness:c,seaRatio:h,flatness:v,noiseSeed:b,elevationCold:w}=e;H=b;let A=k(e,c,3e3,.15,.01),{dryElevation:C,tectonic:E}=r,y=t*n,P=Y(C,h),S=C.map((f,p)=>f<P?-Math.pow(1-f/P,.35):Math.pow((f-P)*(.5+E[p]*.5)/(1-P),1+2*v)),ne=De({width:t,height:n,elevation:S,tectonic:E,erosion:s,riversShown:m}),B=S.map((f,p)=>Math.cos((Math.abs(.5-p/y)*4+.85)*Math.PI)/(f<0?1:1+5*f*f));console.time("windSmoothing"),B=K(se(q(B,t,f=>[0,0,0,127*(f+1)]),"blur(3px)")).map(f=>f*2-1),console.timeEnd("windSmoothing");let I=Fe({width:t,height:n,elevation:S,wind:B,steps:400});l&&(I=I.map((f,p)=>Math.max(0,f+Math.sin(A[p]*50)/10-S[p]*.2)));let F=S.map((f,p)=>a+25-100*Math.abs(.5-p/y)/(.7+.6*I[p])-Math.max(0,f)*w);console.time("biome");let ae=F.map((f,p)=>{let M=1+o*Math.sin(A[p]*100),g=Pe[Math.floor(Math.max(0,Math.min(I[p]*4.5*M,5)))][Math.floor(Math.max(0,Math.min(f*M/10+1,3)))]||0;return g==Q&&S[p]>.5&&(g=ce),g});console.timeEnd("biome");let oe;return i&&(console.time("photo"),oe=[...I].map((f,p)=>{let M=S[p];if(M<0)return[0,(1+M*2)*55+30,(1+M*2)*155+50,255];{let g=[Math.max(0,F[p]*15-f*1e3),150-f*100,Math.max(0,F[p]*8-f*500),255],ie=(M+E[p])*2-1;if(ie>0&&(g=j(g,[0,0,0,255],Math.min(1.5,ie**2*(.5+x())))),F[p]<0&&(g=[255,255,255,255]),ne[p])return[0,60,100+1e3*M,255];for(let D=0;D<3;D++)g[D]+=50+-M*140+25*Math.atan(120*((S[p+t*(p>t*n/2?1:-1)]||0)-M));for(let D of[1,t,-1,-t,0])g=j(g,ee[ae[p+D]],.1);return M>0&&M<5e-4&&(g=j(g,[128,255,0,255],.5)),g}}),console.timeEnd("photo")),{tectonic:E,dryElevation:C,elevation:S,noise:A,rivers:ne,wind:B,temperature:F,humidity:I,biome:ae,photo:oe}}function Fe({width:e,height:r,elevation:t,wind:n,steps:a}){console.time("humidity");let o=Math.sqrt(e*e+r*r),s=e/2,m=q(t,e,(c,h)=>[0,0,0,c<=0?100:0]),l=N(e+s*2,r+s*2);l.ctx.beginPath(),l.ctx.rect(s/2,s/2,e+s,r+s),l.ctx.lineWidth=s/2,l.ctx.stroke(),l.ctx.drawImage(m,e/2,r/2),l.ctx.filter="opacity(50%)";let i=o/10;for(let c=0;c<a;c++){let h=[c%100/100*e,c%10/10*r],v=n[Te(h,e)],b=[h[0]+v*.3*e/8,h[1]+Math.abs(v)*.5*r/12];l.ctx.drawImage(l.canvas,h[0]+s,h[1]+s,i,i,b[0]+s,b[1]+s,i,i)}W(m).filter="blur(10px)",W(m).drawImage(l.canvas,s,s,e,r,0,0,e,r);let u=K(m);return console.timeEnd("humidity"),u}function De({width:e,height:r,elevation:t,humidity:n,tectonic:a,erosion:o,riversShown:s}){console.time("rivers");let m=new Float32Array(e*r),l=O(e,4)[0];for(let i=0;i<o+s;i++){let u=Math.floor(x()*e*r);if(t[u]<x()||n&&n[u]<x())continue;let c=1e4;for(;t[u]>-.15&&c-- >0;){i>o&&(m[u]+=1);let h=t[u],v=0,b=100;for(let w=0;w<8;w++){let A=l[w];t[u+A]<=b&&(v=u+A,b=t[v])}b<h?t[u]-=(h-b)/5:t[u]=b+.02,u=v}}return console.timeEnd("rivers"),m}var me=1,G=2,Q=3,ue=4,V=5,z=6,$=7,U=8,de=9,He=10,J=11,pe=12,X=13,ce=14,Ne=15,Pe=[[Q,pe,ue,me],[Q,V,G,G],[J,V,G,U],[J,X,U,U],[z,X,$,$],[z,X,$,de]],fe=["unknown","desert","grassland","tundra","savanna","shrubland","taiga","tropical forest","decidious forest","rain forest","swamp","snow","steppe","coniferous forest","mountain shrubland","beach"];function Be(e){let r=[];for(let t in e)r[t]=e[t];return r}function Oe(e){let r=parseInt(e,16);return[Math.floor(r/256)*16,Math.floor(r/16)%16*16,r%16*16,256]}var ee=Be({[me]:"ff0",[G]:"8f8",[Q]:"cca",[ue]:"cc0",[V]:"ad4",[z]:"064",[$]:"080",[U]:"4a4",[de]:"084",[He]:"880",[J]:"fff",[pe]:"cfa",[X]:"0a4",[ce]:"844",[Ne]:"ffd"}).map(Oe);function q(e,r,t,n){let a=e.length/r,{canvas:o,ctx:s}=N(r,a),m=s.createImageData(r,a);if(!m.data||!e)debugger;for(let l=0;l<e.length;l++){let i=0,u=t(e[l],l)??0;m.data.set(u,l*4)}return s.putImageData(m,0,0),o}function he({elevation:e,rivers:r},{discreteHeights:t=10,terrainTypeColoring:n=!1,hillRatio:a=.1,mountainRatio:o=.02,green:s=!0}){let m=Y(e,1-a),l=Y(e,1-o);return(i,u)=>{if(r[u]&&i>0)return[0,i*400,200,255];let c=t?Math.floor(i*t)/t:i;return i>0?n?i<m?[32,128,32,255]:i<l?[196,196,32,255]:[128,32,0,255]:s?[c*400,c*150+100,50,255]:[250-c*300,200-c*300,0,255]:[0,c*60+60,c*80+100,255]}}function ge(e,r,t){let{canvas:n,ctx:a}=N(r,t);return a.drawImage(e,0,0,e.width,e.height,0,0,r,t),n}function be(e){return e.getContext("2d")}var Je="334433443223100110013223".split("").map((e,r)=>Number(e)*4+r%2+Math.floor(r/4)%2*2);var Me=[["seed","number",{tip:"Seed for teectonics."}],["noiseSeed","number",{tip:"Seed for other."}],["width","number",{tip:"Map width in pixels"}],["height","number",{tip:"Map height in pixels"}],["noiseSmoothness","range",{max:10,step:.5,tip:"Smootheness of the elevation noise"}],["tectonicSmoothness","range",{max:10,step:.5,tip:"Smootheness of the noise that is used for tectonic plates simulation"}],["noiseFactor","range",{min:-5,max:20,step:.5,tip:"Weight of the 'general purpose' elevation noise"}],["crustFactor","range",{min:-5,max:20,step:.5,tip:"Weight of the 'tectonic plates' noise. Increase to have more mountains on the edge on continents, reduce to have them inside."}],["tectonicFactor","range",{min:-1,max:3,step:.1,tip:"Amount of mountains and island chains and such"}],["pangaea","range",{min:-5,max:5,tip:"Increasing this will make land gravitate the centre of the map, and vice versa"}],["seaRatio","range",{tip:"Sea percentage"}],["flatness","range",{tip:"Initial flatness of the non-mountain areas"}],["randomiseHumidity","checkbox"],["averageTemperature","range",{min:-30,max:50,step:1}],["elevationCold","range",{min:3,max:30,step:1}],["erosion","range",{max:1e5,tip:"How long water-caused erosion will be simulated"}],["riversShown","range",{max:1e3,tip:"Amount of rivers and lakes shown on elevation, humidity and biome maps"}],["biomeScrambling","range",{tip:"Adds randomness to biomes"}],["SET gameMapScale TO NOT 0 IF YOU WANT A GAME MAP","tip"],["squareGrid","checkbox"],["gameMapScale","range",{min:0,max:4,step:1}],["gameMapRivers","range",{max:5e4,step:1e3,tip:"How many rivers will there be on the low-res (hex) map"}],["Graphical repesenation settings","tip"],["generatePhoto","checkbox"],["discreteHeights","range",{max:40,step:1}],["terrainTypeColoring","checkbox"],["generateTileMap","checkbox"]];var xe={mapMode:0,seed:1,width:640,height:640,scale:1,noiseFactor:10,crustFactor:6,tectonicFactor:3,noiseSmoothness:2,tectonicSmoothness:5,pangaea:0,seaRatio:.55,flatness:.5,randomiseHumidity:!1,averageTemperature:15,erosion:5e4,riversShown:400,biomeScrambling:0,terrainTypeColoring:!1,discreteHeights:0,hillRatio:.12,mountainRatio:.04,gameMapRivers:15e3,gameMapScale:2,generatePhoto:!0,squareGrid:!1},d={};function Ge(){if(document.location.hash){d={};let e=document.location.hash.substr(1).split("&").map(r=>r.split("="));console.log(e);for(let r of e)d[r[0]]=r[1]=="false"?!1:r[1]=="true"?!0:Number(r[1]);console.log(d)}(!d||!d.width)&&(d=JSON.parse(localStorage.mapGenSettings)),(!d||!d.width)&&(d={...xe}),ve(),re()}window.onload=Ge;window.resetSettings=()=>{};function re(){for(let[e,r]of Me){if(r=="tip")continue;let t=document.getElementById(e);d[e]=t.type=="checkbox"?t.checked:Number(t.value);let n=document.getElementById(e+"_value");n&&(n.innerText=String(d[e]).substr(0,8))}ye(),Ue(d)}window.applySettings=re;document.body.addEventListener("mousedown",e=>{switch(e.target?.id){case"resetSettings":d={...xe},ve(),re();return}});function $e(e,r,t,n){let a={};for(let o of n??Object.keys(e)){a[o]=new Float32Array(e[o].length);let s=e[o],m=r[o];if(o=="photo"||o=="biome")for(let l in s)a[o][l]=Xe(s[l],m[l],t);else for(let l in s)a[o][l]=s[l]*(1-t)+m[l]*t}return a}blendMaps.onchange=e=>{console.time("blend");let r=Number(blendMaps.value);if(R.length>=2){let t=$e(R[R.length-2],R[R.length-1],r,["dryElevation","tectonic"]),n=Z(Ae,t);we(n)}console.timeEnd("blend")};var _={};function ve(){let e=document.getElementById("form");e.innerHTML="";for(let r of Me){let[t,n,a]=r;switch(a=a||{},_[t]=a.tip,n){case"tip":e.innerHTML+=`<div class="tip">${t}</div>`;break;case"checkbox":e.innerHTML+=`<div>${t}</div><input class="checkbox" type="checkbox" id="${t}" ${d[t]?"checked":""} />`;break;case"number":e.innerHTML+=`<div>${t}</div><input class="number" type="number" id="${t}" value="${d[t]}" />`;break;case"range":let o=a.min||0,s=a.max||1,m=a.step||(s-o)/100;e.innerHTML+=`<div>${t}</div><input class="range" type="range" id="${t}" min="${o}" max="${s}" step="${m}" value="${d[t]}"/>
        <div id="${t}_value"></div>
        `;break}}}function ye(){document.location.hash=Object.keys(d).map(e=>`${e}=${d[e]}`).join("&"),localStorage.mapGenSettings=JSON.stringify(d)}var te=[],Se=[];function T(e,r,t,n=1/4,a){let o=q(e,d.width,t,a),s=ge(o,o.width*n,o.height*n),m=be(s);m.font="14px Verdana",m.fillStyle="#fff",m.strokeText(r,5,15),m.fillText(r,4,14),document.getElementById("minimaps")?.appendChild(s);let l=te.length;l==d.mapMode&&document.getElementById("map")?.appendChild(o),s.id="mini_"+l,te.push(o),Se.push(s),s.onclick=()=>{d.mapMode=l,ye(),document.getElementById("map")?.setHTMLUnsafe(""),document.getElementById("map")?.appendChild(o)}}var L,R=[];document.onmousemove=e=>{let r=[e.offsetX,e.offsetY],t=e.target,n=document.getElementById("tooltip");n.style.left=`${Math.min(window.innerWidth-300,e.screenX+20)}`,n.style.top="$Math.min(window.innerHeight - 200, e.screenY - 40)}";let a=t.tagName=="CANVAS",o=t.id;if(n.style.display=a?"grid":_[o]?"block":"none",a){let s=e.offsetX/t.width*d.width,m=e.offsetY/t.height*d.height,l=Math.floor(s)+Math.floor(m)*d.width;n.innerHTML=Object.keys(L).map(i=>i=="photo"?"":`<div>${i}</div><div>${i=="biome"?fe[L[i][l]].toUpperCase():L[i][l]}</div>`).join("")}else _[o]&&(n.innerHTML=_[o])};function we(e){let{elevation:r,tectonic:t,rivers:n,wind:a,temperature:o,humidity:s,biome:m,photo:l}=e;console.time("draw"),document.getElementById("map")?.setHTMLUnsafe(""),document.getElementById("minimaps")?.setHTMLUnsafe(""),te=[],Se=[],T(r,"elevation",he({elevation:r,rivers:n},d)),T(t,"tectonics",(i,u)=>[0,0,0,i*255]),T(o,"temperature",(i,u)=>[i*5+100,255-Math.abs(i-5)*10,155-i*5,255]),T(a,"wind",(i,u)=>[i*100,0,-i*100,255]),T(s,"humidity",(i,u)=>n[u]&&r[u]>0?[0,0,0,255]:u%d.width<20?[a[u]*100,0,-a[u]*100,255]:r[u]<0?[0,0,0,255]:[300-i*1e3,r[u]*200+50,i*350-150,255]),T(m,"biome",(i,u)=>r[u]<0||n[u]?[0,40,80,255]:ee[i]),d.generatePhoto&&T(l,"photo",(i,u)=>i,void 0,i=>Math.max(1,~~(r[i]*20)*2)),console.timeEnd("draw")}var Ae;function Ue(e){Ae=e,console.time("generation total"),L=Z(e),R.push(L),we(L),console.timeEnd("generation total")}function Xe(e,r,t){throw new Error("Function not implemented.")}})();
